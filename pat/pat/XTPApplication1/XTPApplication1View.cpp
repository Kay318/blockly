// XTPApplication1View.cpp : implementation of the CXTPApplication1View class
//
// Generated by Codejock Toolkit Pro Application Wizard.
// Contact information:
//     support@codejock.com
//     http://www.codejock.com
//

#include "stdafx.h"

#include "XTPApplication1.h"
#include "XTPApplication1Doc.h"
#include "XTPApplication1View.h"
#include "MainFrm.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CXTPApplication1View

IMPLEMENT_DYNCREATE(CXTPApplication1View, CView)

BEGIN_MESSAGE_MAP(CXTPApplication1View, CView)
	ON_COMMAND(ID_EDIT_PASTE, &CXTPApplication1View::OnEmptyCommand)
	ON_COMMAND(ID_EDIT_CUT, &CXTPApplication1View::OnEmptyCommand)
	ON_COMMAND(ID_EDIT_COPY, &CXTPApplication1View::OnEmptyCommand)
	ON_COMMAND(ID_EDIT_SELECT_ALL, &CXTPApplication1View::OnEmptyCommand)
	ON_UPDATE_COMMAND_UI(ID_EDIT_PASTE, &CXTPApplication1View::OnUpdateEmptyCommand)
	ON_UPDATE_COMMAND_UI(ID_EDIT_CUT, &CXTPApplication1View::OnUpdateEmptyCommand)
	ON_UPDATE_COMMAND_UI(ID_EDIT_COPY, &CXTPApplication1View::OnUpdateEmptyCommand)
	ON_UPDATE_COMMAND_UI(ID_EDIT_SELECT_ALL, &CXTPApplication1View::OnUpdateEmptyCommand)
	ON_WM_CREATE()
END_MESSAGE_MAP()

// CXTPApplication1View construction/destruction

CXTPApplication1View::CXTPApplication1View()
	: ParentView()
{
	// TODO: add construction code here
}

CXTPApplication1View::~CXTPApplication1View()
{
	// TODO: add cleanup code here
}

BOOL CXTPApplication1View::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: Modify the Window class or styles here by modifying
	//  the CREATESTRUCT cs
	if (!ParentView::PreCreateWindow(cs))
		return FALSE;


	return TRUE;
}

void CXTPApplication1View::OnDraw(CDC* pDC)
{
	CXTPApplication1Doc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;

	// TODO: add draw code for native data here
}

int CXTPApplication1View::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
	if (ParentView::OnCreate(lpCreateStruct) == -1)
	{
		TRACE(_T("ERROR: Unable to create application view.\n"));
		return -1;
	}

	ModifyStyleEx(WS_EX_CLIENTEDGE, 0);

	OnThemeChanged();

	return 0;
}

void CXTPApplication1View::OnEmptyCommand()
{
	AfxMessageBox(_T("TODO: Add your command handler"));
}

void CXTPApplication1View::OnUpdateEmptyCommand(CCmdUI* pCmdUI)
{
	ASSERT(NULL != pCmdUI);
	pCmdUI->Enable(TRUE);
}


#ifdef _DEBUG
CXTPApplication1Doc* CXTPApplication1View::GetDocument() const
{
	CXTPApplication1Doc* pDoc = DYNAMIC_DOWNCAST(CXTPApplication1Doc, m_pDocument);
	ASSERT_VALID(pDoc);
	return pDoc;
}
#endif //_DEBUG

CMainFrame* CXTPApplication1View::GetMainFrame() const
{
	CMainFrame* pMainFrame = DYNAMIC_DOWNCAST(CMainFrame, AfxGetMainWnd());
	ASSERT_VALID(pMainFrame);
	return pMainFrame;
}


void CXTPApplication1View::OnThemeChanged()
{
}


// CXTPApplication1View message handlers

